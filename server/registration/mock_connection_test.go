// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/choria-io/go-choria/server/registration (interfaces: Connection)

// Package registration is a generated GoMock package.
package registration

import (
	choria "github.com/choria-io/go-choria/choria"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockConnection is a mock of Connection interface
type MockConnection struct {
	ctrl     *gomock.Controller
	recorder *MockConnectionMockRecorder
}

// MockConnectionMockRecorder is the mock recorder for MockConnection
type MockConnectionMockRecorder struct {
	mock *MockConnection
}

// NewMockConnection creates a new mock instance
func NewMockConnection(ctrl *gomock.Controller) *MockConnection {
	mock := &MockConnection{ctrl: ctrl}
	mock.recorder = &MockConnectionMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockConnection) EXPECT() *MockConnectionMockRecorder {
	return m.recorder
}

// IsConnected mocks base method
func (m *MockConnection) IsConnected() bool {
	ret := m.ctrl.Call(m, "IsConnected")
	ret0, _ := ret[0].(bool)
	return ret0
}

// IsConnected indicates an expected call of IsConnected
func (mr *MockConnectionMockRecorder) IsConnected() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsConnected", reflect.TypeOf((*MockConnection)(nil).IsConnected))
}

// Publish mocks base method
func (m *MockConnection) Publish(arg0 *choria.Message) error {
	ret := m.ctrl.Call(m, "Publish", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Publish indicates an expected call of Publish
func (mr *MockConnectionMockRecorder) Publish(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Publish", reflect.TypeOf((*MockConnection)(nil).Publish), arg0)
}
