// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/choria-io/go-choria/choria (interfaces: PublishableConnector)

// Package registration is a generated GoMock package.
package registration

import (
	choria "github.com/choria-io/go-choria/choria"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockPublishableConnector is a mock of PublishableConnector interface
type MockPublishableConnector struct {
	ctrl     *gomock.Controller
	recorder *MockPublishableConnectorMockRecorder
}

// MockPublishableConnectorMockRecorder is the mock recorder for MockPublishableConnector
type MockPublishableConnectorMockRecorder struct {
	mock *MockPublishableConnector
}

// NewMockPublishableConnector creates a new mock instance
func NewMockPublishableConnector(ctrl *gomock.Controller) *MockPublishableConnector {
	mock := &MockPublishableConnector{ctrl: ctrl}
	mock.recorder = &MockPublishableConnectorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPublishableConnector) EXPECT() *MockPublishableConnectorMockRecorder {
	return m.recorder
}

// Publish mocks base method
func (m *MockPublishableConnector) Publish(arg0 *choria.Message) error {
	ret := m.ctrl.Call(m, "Publish", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Publish indicates an expected call of Publish
func (mr *MockPublishableConnectorMockRecorder) Publish(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Publish", reflect.TypeOf((*MockPublishableConnector)(nil).Publish), arg0)
}
