// generated code; DO NOT EDIT

package choria_provisionclient

import (
	"encoding/base64"
	"encoding/json"

	"github.com/choria-io/go-choria/providers/agent/mcorpc/ddl/agent"
)

var rawDDL = "ewogICIkc2NoZW1hIjogImh0dHBzOi8vY2hvcmlhLmlvL3NjaGVtYXMvbWNvcnBjL2RkbC92MS9hZ2VudC5qc29uIiwKICAibWV0YWRhdGEiOiB7CiAgICAibmFtZSI6ICJjaG9yaWFfcHJvdmlzaW9uIiwKICAgICJkZXNjcmlwdGlvbiI6ICJDaG9yaWEgUHJvdmlzaW9uZXIiLAogICAgImF1dGhvciI6ICJSLkkuUGllbmFhciA8cmlwQGRldmNvLm5ldD4iLAogICAgImxpY2Vuc2UiOiAiQXBhY2hlLTIuMCIsCiAgICAidmVyc2lvbiI6ICIwLjIyLjAiLAogICAgInVybCI6ICJodHRwczovL2Nob3JpYS5pbyIsCiAgICAidGltZW91dCI6IDIwCiAgfSwKICAiYWN0aW9ucyI6IFsKICAgIHsKICAgICAgImFjdGlvbiI6ICJjb25maWd1cmUiLAogICAgICAiaW5wdXQiOiB7CiAgICAgICAgInRva2VuIjogewogICAgICAgICAgInByb21wdCI6ICJUb2tlbiIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiQXV0aGVudGljYXRpb24gdG9rZW4gdG8gcGFzcyB0byB0aGUgc2VydmVyIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVmYXVsdCI6ICIiLAogICAgICAgICAgIm9wdGlvbmFsIjogdHJ1ZSwKICAgICAgICAgICJ2YWxpZGF0aW9uIjogIi4iLAogICAgICAgICAgIm1heGxlbmd0aCI6IDEyOAogICAgICAgIH0sCiAgICAgICAgImNvbmZpZyI6IHsKICAgICAgICAgICJwcm9tcHQiOiAiQ29uZmlndXJhdGlvbiIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIGNvbmZpZ3VyYXRpb24gdG8gYXBwbHkgdG8gdGhpcyBub2RlIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVmYXVsdCI6IG51bGwsCiAgICAgICAgICAib3B0aW9uYWwiOiBmYWxzZSwKICAgICAgICAgICJ2YWxpZGF0aW9uIjogIl57Lit9JCIsCiAgICAgICAgICAibWF4bGVuZ3RoIjogMjA0OAogICAgICAgIH0sCiAgICAgICAgImNlcnRpZmljYXRlIjogewogICAgICAgICAgInByb21wdCI6ICJDZXJ0aWZpY2F0ZSIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiUEVNIHRleHQgYmxvY2sgZm9yIHRoZSBjZXJ0aWZpY2F0ZSIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlZmF1bHQiOiBudWxsLAogICAgICAgICAgIm9wdGlvbmFsIjogdHJ1ZSwKICAgICAgICAgICJ2YWxpZGF0aW9uIjogIl4tLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0iLAogICAgICAgICAgIm1heGxlbmd0aCI6IDEwMjQwCiAgICAgICAgfSwKICAgICAgICAiY2EiOiB7CiAgICAgICAgICAicHJvbXB0IjogIkNBIEJ1bmRsZSIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiUEVNIHRleHQgYmxvY2sgZm9yIHRoZSBDQSIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlZmF1bHQiOiBudWxsLAogICAgICAgICAgIm9wdGlvbmFsIjogdHJ1ZSwKICAgICAgICAgICJ2YWxpZGF0aW9uIjogIl4tLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0iLAogICAgICAgICAgIm1heGxlbmd0aCI6IDIwNDgwCiAgICAgICAgfSwKICAgICAgICAic3NsZGlyIjogewogICAgICAgICAgInByb21wdCI6ICJTU0wgRGlyIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJEaXJlY3RvcnkgZm9yIHN0b3JpbmcgdGhlIGNlcnRpZmljYXRlIGluIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVmYXVsdCI6IG51bGwsCiAgICAgICAgICAib3B0aW9uYWwiOiB0cnVlLAogICAgICAgICAgInZhbGlkYXRpb24iOiAiLiIsCiAgICAgICAgICAibWF4bGVuZ3RoIjogNTAwCiAgICAgICAgfSwKICAgICAgICAia2V5IjogewogICAgICAgICAgInByb21wdCI6ICJQRU0gdGV4dCBibG9jayBmb3IgdGhlIHByaXZhdGUga2V5IiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVmYXVsdCI6IG51bGwsCiAgICAgICAgICAib3B0aW9uYWwiOiB0cnVlLAogICAgICAgICAgInZhbGlkYXRpb24iOiAiLS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLSIsCiAgICAgICAgICAibWF4bGVuZ3RoIjogMTAyNDAKICAgICAgICB9LAogICAgICAgICJlZGNoX3B1YmxpYyI6IHsKICAgICAgICAgICJwcm9tcHQiOiAgIkVEQ0ggUHVibGljIEtleSIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiUmVxdWlyZWQgd2hlbiBzZW5kaW5nIGEgcHJpdmF0ZSBrZXkiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZWZhdWx0IjogIiIsCiAgICAgICAgICAib3B0aW9uYWwiOiB0cnVlLAogICAgICAgICAgIm1heGxlbmd0aCI6IDY0LAogICAgICAgICAgInZhbGlkYXRpb24iOiAiLiIKICAgICAgICB9CgogICAgICB9LAogICAgICAib3V0cHV0IjogewogICAgICAgICJtZXNzYWdlIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlN0YXR1cyBtZXNzYWdlIGZyb20gdGhlIFByb3Zpc2lvbmVyIiwKICAgICAgICAgICJkaXNwbGF5X2FzIjogIk1lc3NhZ2UiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZWZhdWx0IjogbnVsbAogICAgICAgIH0KICAgICAgfSwKICAgICAgImRpc3BsYXkiOiAiZmFpbGVkIiwKICAgICAgImRlc2NyaXB0aW9uIjogIkNvbmZpZ3VyZSB0aGUgQ2hvcmlhIFNlcnZlciIKICAgIH0sCiAgICB7CiAgICAgICJhY3Rpb24iOiAiZ2VuY3NyIiwKICAgICAgImlucHV0IjogewogICAgICAgICJ0b2tlbiI6IHsKICAgICAgICAgICJwcm9tcHQiOiAiVG9rZW4iLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkF1dGhlbnRpY2F0aW9uIHRva2VuIHRvIHBhc3MgdG8gdGhlIHNlcnZlciIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlZmF1bHQiOiAiIiwKICAgICAgICAgICJvcHRpb25hbCI6IHRydWUsCiAgICAgICAgICAidmFsaWRhdGlvbiI6ICIuIiwKICAgICAgICAgICJtYXhsZW5ndGgiOiAxMjgKICAgICAgICB9LAogICAgICAgICJjbiI6IHsKICAgICAgICAgICJwcm9tcHQiOiAiQ29tbW9uIE5hbWUiLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBjZXJ0aWZpY2F0ZSBDb21tb24gTmFtZSB0byBwbGFjZSBpbiB0aGUgQ1NSIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVmYXVsdCI6IG51bGwsCiAgICAgICAgICAib3B0aW9uYWwiOiB0cnVlLAogICAgICAgICAgInZhbGlkYXRpb24iOiAiXigoW2EtekEtWjAtOV18W2EtekEtWjAtOV1bYS16QS1aMC05LV0qW2EtekEtWjAtOV0pLikqKFtBLVphLXowLTldfFtBLVphLXowLTldW0EtWmEtejAtOS1dKltBLVphLXowLTldKSQiLAogICAgICAgICAgIm1heGxlbmd0aCI6IDgwCiAgICAgICAgfSwKICAgICAgICAiQyI6IHsKICAgICAgICAgICJwcm9tcHQiOiAiQ291bnRyeSIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiQ291bnRyeSBDb2RlIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVmYXVsdCI6IG51bGwsCiAgICAgICAgICAib3B0aW9uYWwiOiB0cnVlLAogICAgICAgICAgInZhbGlkYXRpb24iOiAiXltBLVpdezJ9JCIsCiAgICAgICAgICAibWF4bGVuZ3RoIjogMgogICAgICAgIH0sCiAgICAgICAgIkwiOiB7CiAgICAgICAgICAicHJvbXB0IjogIkxvY2FsaXR5IiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJMb2NhbGl0eSBvciBtdW5pY2lwYWxpdHkgKHN1Y2ggYXMgY2l0eSBvciB0b3duIG5hbWUpIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVmYXVsdCI6IG51bGwsCiAgICAgICAgICAib3B0aW9uYWwiOiB0cnVlLAogICAgICAgICAgInZhbGlkYXRpb24iOiAiXltcXHdcXHMtXSskIiwKICAgICAgICAgICJtYXhsZW5ndGgiOiA1MAogICAgICAgIH0sCiAgICAgICAgIk8iOiB7CiAgICAgICAgICAicHJvbXB0IjogIk9yZ2FuaXphdGlvbiIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiT3JnYW5pemF0aW9uIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVmYXVsdCI6IG51bGwsCiAgICAgICAgICAib3B0aW9uYWwiOiB0cnVlLAogICAgICAgICAgInZhbGlkYXRpb24iOiAiXltcXHdcXHMtXSskIiwKICAgICAgICAgICJtYXhsZW5ndGgiOiA1MAogICAgICAgIH0sCiAgICAgICAgIk9VIjogewogICAgICAgICAgInByb21wdCI6ICJPcmdhbml6YXRpb25hbCBVbml0IiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJPcmdhbml6YXRpb25hbCBVbml0IiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVmYXVsdCI6IG51bGwsCiAgICAgICAgICAib3B0aW9uYWwiOiB0cnVlLAogICAgICAgICAgInZhbGlkYXRpb24iOiAiXltcXHdcXHMtXSskIiwKICAgICAgICAgICJtYXhsZW5ndGgiOiA1MAogICAgICAgIH0sCiAgICAgICAgIlNUIjogewogICAgICAgICAgInByb21wdCI6ICJTdGF0ZSIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiU3RhdGUiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZWZhdWx0IjogbnVsbCwKICAgICAgICAgICJvcHRpb25hbCI6IHRydWUsCiAgICAgICAgICAidmFsaWRhdGlvbiI6ICJeW1xcd1xccy1dKyQiLAogICAgICAgICAgIm1heGxlbmd0aCI6IDUwCiAgICAgICAgfQogICAgICB9LAogICAgICAib3V0cHV0IjogewogICAgICAgICJjc3IiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiUEVNIHRleHQgYmxvY2sgZm9yIHRoZSBDU1IiLAogICAgICAgICAgImRpc3BsYXlfYXMiOiAiQ1NSIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVmYXVsdCI6IG51bGwKICAgICAgICB9LAogICAgICAgICJwdWJsaWNfa2V5IjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlBFTSB0ZXh0IGJsb2NrIG9mIHRoZSBwdWJsaWMga2V5IHRoYXQgbWFkZSB0aGUgQ1NSIiwKICAgICAgICAgICJkaXNwbGF5X2FzIjogIlB1YmxpYyBLZXkiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZWZhdWx0IjogbnVsbAogICAgICAgIH0sCiAgICAgICAgInNzbGRpciI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJTU0wgZGlyZWN0b3J5IGFzIGRldGVybWluZWQgYnkgdGhlIHNlcnZlciIsCiAgICAgICAgICAiZGlzcGxheV9hcyI6ICJTU0wgRGlyIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVmYXVsdCI6IG51bGwKICAgICAgICB9CiAgICAgIH0sCiAgICAgICJkaXNwbGF5IjogImFsd2F5cyIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJSZXF1ZXN0IGEgQ1NSIGZyb20gdGhlIENob3JpYSBTZXJ2ZXIiCiAgICB9LAogICAgewogICAgICAiYWN0aW9uIjogInJlbGVhc2VfdXBkYXRlIiwKICAgICAgImlucHV0IjogewogICAgICAgICJ0b2tlbiI6IHsKICAgICAgICAgICJwcm9tcHQiOiAiVG9rZW4iLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkF1dGhlbnRpY2F0aW9uIHRva2VuIHRvIHBhc3MgdG8gdGhlIHNlcnZlciIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlZmF1bHQiOiAiIiwKICAgICAgICAgICJvcHRpb25hbCI6IHRydWUsCiAgICAgICAgICAidmFsaWRhdGlvbiI6ICIuIiwKICAgICAgICAgICJtYXhsZW5ndGgiOiAxMjgKICAgICAgICB9LAogICAgICAgICJyZXBvc2l0b3J5IjogewogICAgICAgICAgInByb21wdCI6ICJSZXBvc2l0b3J5IFVSTCIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiSFRUUChTKSBzZXJ2ZXIgaG9zdGluZyB0aGUgdXBkYXRlIHJlcG9zaXRvcnkiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZWZhdWx0IjogIiIsCiAgICAgICAgICAib3B0aW9uYWwiOiBmYWxzZSwKICAgICAgICAgICJ2YWxpZGF0aW9uIjogIl5odHRwKHMqKTovLyIsCiAgICAgICAgICAibWF4bGVuZ3RoIjogNTEyCiAgICAgICAgfSwKICAgICAgICAidmVyc2lvbiI6IHsKICAgICAgICAgICJwcm9tcHQiOiAiVmVyc2lvbiB0byB1cGRhdGUgdG8iLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlBhY2thZ2UgdmVyc2lvbiB0byB1cGRhdGUgdG8iLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZWZhdWx0IjogIiIsCiAgICAgICAgICAib3B0aW9uYWwiOiBmYWxzZSwKICAgICAgICAgICJ2YWxpZGF0aW9uIjogIi4rIiwKICAgICAgICAgICJtYXhsZW5ndGgiOiAzMgogICAgICAgIH0KICAgICAgfSwKICAgICAgIm91dHB1dCI6IHsKICAgICAgICAibWVzc2FnZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJTdGF0dXMgbWVzc2FnZSBmcm9tIHRoZSBQcm92aXNpb25lciIsCiAgICAgICAgICAiZGlzcGxheV9hcyI6ICJNZXNzYWdlIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVmYXVsdCI6IG51bGwKICAgICAgICB9CiAgICAgIH0sCiAgICAgICJkaXNwbGF5IjogImFsd2F5cyIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJQZXJmb3JtcyBhbiBpbi1wbGFjZSBiaW5hcnkgdXBkYXRlIGFuZCByZXN0YXJ0cyBDaG9yaWEiCiAgICB9LAogICAgewogICAgICAiYWN0aW9uIjogImp3dCIsCiAgICAgICJpbnB1dCI6IHsKICAgICAgICAidG9rZW4iOiB7CiAgICAgICAgICAicHJvbXB0IjogIlRva2VuIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJBdXRoZW50aWNhdGlvbiB0b2tlbiB0byBwYXNzIHRvIHRoZSBzZXJ2ZXIiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZWZhdWx0IjogIiIsCiAgICAgICAgICAib3B0aW9uYWwiOiB0cnVlLAogICAgICAgICAgInZhbGlkYXRpb24iOiAiLiIsCiAgICAgICAgICAibWF4bGVuZ3RoIjogMTI4CiAgICAgICAgfQogICAgICB9LAogICAgICAib3V0cHV0IjogewogICAgICAgICJqd3QiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIGNvbnRlbnRzIG9mIHRoZSBKV1QgdG9rZW4iLAogICAgICAgICAgImRpc3BsYXlfYXMiOiAiSldUIFRva2VuIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVmYXVsdCI6ICIiCiAgICAgICAgfSwKICAgICAgICAiZWRjaF9wdWJsaWMiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIEVEQ0ggcHVibGljIGtleSBmb3IgY2FsY3VsYXRpbmcgc2hhcmVkIHNlY3JldHMiLAogICAgICAgICAgImRpc3BsYXlfYXMiOiAiRURDSCBQdWJsaWMgS2V5IiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVmYXVsdCI6ICIiCiAgICAgICAgfQogICAgICB9LAogICAgICAiZGlzcGxheSI6ICJhbHdheXMiLAogICAgICAiZGVzY3JpcHRpb24iOiAiUmVlbmFibGUgcHJvdmlzaW9uIG1vZGUgaW4gYSBydW5uaW5nIENob3JpYSBTZXJ2ZXIiCiAgICB9LAogICAgewogICAgICAiYWN0aW9uIjogInJlcHJvdmlzaW9uIiwKICAgICAgImlucHV0IjogewogICAgICAgICJ0b2tlbiI6IHsKICAgICAgICAgICJwcm9tcHQiOiAiVG9rZW4iLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkF1dGhlbnRpY2F0aW9uIHRva2VuIHRvIHBhc3MgdG8gdGhlIHNlcnZlciIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlZmF1bHQiOiAiIiwKICAgICAgICAgICJvcHRpb25hbCI6IHRydWUsCiAgICAgICAgICAidmFsaWRhdGlvbiI6ICIuIiwKICAgICAgICAgICJtYXhsZW5ndGgiOiAxMjgKICAgICAgICB9CiAgICAgIH0sCiAgICAgICJvdXRwdXQiOiB7CiAgICAgICAgIm1lc3NhZ2UiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiU3RhdHVzIG1lc3NhZ2UgZnJvbSB0aGUgUHJvdmlzaW9uZXIiLAogICAgICAgICAgImRpc3BsYXlfYXMiOiAiTWVzc2FnZSIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlZmF1bHQiOiBudWxsCiAgICAgICAgfQogICAgICB9LAogICAgICAiZGlzcGxheSI6ICJhbHdheXMiLAogICAgICAiZGVzY3JpcHRpb24iOiAiUmVlbmFibGUgcHJvdmlzaW9uIG1vZGUgaW4gYSBydW5uaW5nIENob3JpYSBTZXJ2ZXIiCiAgICB9LAogICAgewogICAgICAiYWN0aW9uIjogInJlc3RhcnQiLAogICAgICAiaW5wdXQiOiB7CiAgICAgICAgInRva2VuIjogewogICAgICAgICAgInByb21wdCI6ICJUb2tlbiIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiQXV0aGVudGljYXRpb24gdG9rZW4gdG8gcGFzcyB0byB0aGUgc2VydmVyIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVmYXVsdCI6ICIiLAogICAgICAgICAgIm9wdGlvbmFsIjogdHJ1ZSwKICAgICAgICAgICJ2YWxpZGF0aW9uIjogIi4iLAogICAgICAgICAgIm1heGxlbmd0aCI6IDEyOAogICAgICAgIH0sCiAgICAgICAgInNwbGF5IjogewogICAgICAgICAgInByb21wdCI6ICJTcGxheSB0aW1lIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgY29uZmlndXJhdGlvbiB0byBhcHBseSB0byB0aGlzIG5vZGUiLAogICAgICAgICAgInR5cGUiOiAibnVtYmVyIiwKICAgICAgICAgICJkZWZhdWx0IjogbnVsbCwKICAgICAgICAgICJvcHRpb25hbCI6IHRydWUKICAgICAgICB9CiAgICAgIH0sCiAgICAgICJvdXRwdXQiOiB7CiAgICAgICAgIm1lc3NhZ2UiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiU3RhdHVzIG1lc3NhZ2UgZnJvbSB0aGUgUHJvdmlzaW9uZXIiLAogICAgICAgICAgImRpc3BsYXlfYXMiOiAiTWVzc2FnZSIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlZmF1bHQiOiBudWxsCiAgICAgICAgfQogICAgICB9LAogICAgICAiZGlzcGxheSI6ICJmYWlsZWQiLAogICAgICAiZGVzY3JpcHRpb24iOiAiUmVzdGFydCB0aGUgQ2hvcmlhIFNlcnZlciIKICAgIH0KICBdCn0K"

// DDLBytes is the raw JSON encoded DDL file for the agent
func DDLBytes() ([]byte, error) {
	return base64.StdEncoding.DecodeString(rawDDL)
}

// DDL is a parsed and loaded DDL for the agent
func DDL() (*agent.DDL, error) {
	ddlj, err := DDLBytes()
	if err != nil {
		return nil, err
	}

	ddl := &agent.DDL{}
	err = json.Unmarshal(ddlj, ddl)
	if err != nil {
		return nil, err
	}

	return ddl, nil
}
