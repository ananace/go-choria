// Code generated by MockGen. DO NOT EDIT.
// Source: puppet.go

// Package choria is a generated GoMock package.
package choria

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockpuppetSettingsProvider is a mock of puppetSettingsProvider interface
type MockpuppetSettingsProvider struct {
	ctrl     *gomock.Controller
	recorder *MockpuppetSettingsProviderMockRecorder
}

// MockpuppetSettingsProviderMockRecorder is the mock recorder for MockpuppetSettingsProvider
type MockpuppetSettingsProviderMockRecorder struct {
	mock *MockpuppetSettingsProvider
}

// NewMockpuppetSettingsProvider creates a new mock instance
func NewMockpuppetSettingsProvider(ctrl *gomock.Controller) *MockpuppetSettingsProvider {
	mock := &MockpuppetSettingsProvider{ctrl: ctrl}
	mock.recorder = &MockpuppetSettingsProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockpuppetSettingsProvider) EXPECT() *MockpuppetSettingsProviderMockRecorder {
	return m.recorder
}

// PuppetSetting mocks base method
func (m *MockpuppetSettingsProvider) PuppetSetting(arg0 string) (string, error) {
	ret := m.ctrl.Call(m, "PuppetSetting", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PuppetSetting indicates an expected call of PuppetSetting
func (mr *MockpuppetSettingsProviderMockRecorder) PuppetSetting(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PuppetSetting", reflect.TypeOf((*MockpuppetSettingsProvider)(nil).PuppetSetting), arg0)
}

// Getuid mocks base method
func (m *MockpuppetSettingsProvider) Getuid() int {
	ret := m.ctrl.Call(m, "Getuid")
	ret0, _ := ret[0].(int)
	return ret0
}

// Getuid indicates an expected call of Getuid
func (mr *MockpuppetSettingsProviderMockRecorder) Getuid() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Getuid", reflect.TypeOf((*MockpuppetSettingsProvider)(nil).Getuid))
}
