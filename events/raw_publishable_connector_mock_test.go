// Code generated by MockGen. DO NOT EDIT.
// Source: events.go

package events

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockRawPublishableConnector is a mock of RawPublishableConnector interface
type MockRawPublishableConnector struct {
	ctrl     *gomock.Controller
	recorder *MockRawPublishableConnectorMockRecorder
}

// MockRawPublishableConnectorMockRecorder is the mock recorder for MockRawPublishableConnector
type MockRawPublishableConnectorMockRecorder struct {
	mock *MockRawPublishableConnector
}

// NewMockRawPublishableConnector creates a new mock instance
func NewMockRawPublishableConnector(ctrl *gomock.Controller) *MockRawPublishableConnector {
	mock := &MockRawPublishableConnector{ctrl: ctrl}
	mock.recorder = &MockRawPublishableConnectorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRawPublishableConnector) EXPECT() *MockRawPublishableConnectorMockRecorder {
	return m.recorder
}

// PublishRaw mocks base method
func (m *MockRawPublishableConnector) PublishRaw(target string, data []byte) error {
	ret := m.ctrl.Call(m, "PublishRaw", target, data)
	ret0, _ := ret[0].(error)
	return ret0
}

// PublishRaw indicates an expected call of PublishRaw
func (mr *MockRawPublishableConnectorMockRecorder) PublishRaw(target, data interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PublishRaw", reflect.TypeOf((*MockRawPublishableConnector)(nil).PublishRaw), target, data)
}
