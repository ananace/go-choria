// Code generated by MockGen. DO NOT EDIT.
// Source: mcorpc/external/provider.go

// Package external is a generated GoMock package.
package external

import (
	go_config "github.com/choria-io/go-config"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockChoriaFramework is a mock of ChoriaFramework interface
type MockChoriaFramework struct {
	ctrl     *gomock.Controller
	recorder *MockChoriaFrameworkMockRecorder
}

// MockChoriaFrameworkMockRecorder is the mock recorder for MockChoriaFramework
type MockChoriaFrameworkMockRecorder struct {
	mock *MockChoriaFramework
}

// NewMockChoriaFramework creates a new mock instance
func NewMockChoriaFramework(ctrl *gomock.Controller) *MockChoriaFramework {
	mock := &MockChoriaFramework{ctrl: ctrl}
	mock.recorder = &MockChoriaFrameworkMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockChoriaFramework) EXPECT() *MockChoriaFrameworkMockRecorder {
	return m.recorder
}

// Configuration mocks base method
func (m *MockChoriaFramework) Configuration() *go_config.Config {
	ret := m.ctrl.Call(m, "Configuration")
	ret0, _ := ret[0].(*go_config.Config)
	return ret0
}

// Configuration indicates an expected call of Configuration
func (mr *MockChoriaFrameworkMockRecorder) Configuration() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Configuration", reflect.TypeOf((*MockChoriaFramework)(nil).Configuration))
}
